const terminal = document.getElementById('terminal');
const commandInput = document.getElementById('command-input');
const output = document.getElementById('output');

// Initialisation des commandes
let commands = {};

async function loadCommands() {
    try {
        const response = await fetch('../../JSON/donnees.json');
        commands = await response.json();
    } catch (error) {
        output.innerHTML += `<div>Erreur lors du chargement des commandes : ${error.message}</div>`;
    }
}

// Fonction pour exécuter une commande
function executeCommand(command) {
    const commandLine = `<span class="command">balint@linux:~$ ${command}</span>`;
    
    if (command === 'clear' || command === "cls") {
        output.innerHTML = ''; // Efface la sortie
    } else if (command in commands) {
        const commandOutput = commands[command];
        
        // Gérer l'affichage structuré par lignes
        if (typeof commandOutput === 'object') {
            const formattedOutput = Object.values(commandOutput).join('<br>');
            output.innerHTML += `<div>${commandLine}<br>${formattedOutput}</div>`;
        } else {
            output.innerHTML += `<div>${commandLine}<br>${commandOutput}</div>`;
        }
    } else {
        output.innerHTML += `<div>${commandLine}<br>Command not found: ${command}</div>`;
    }
    
    terminal.scrollTop = terminal.scrollHeight; // Scroller jusqu'à la fin
}

// Afficher le message de bienvenue
function displayWelcomeMessage() {
    const welcomeMessage = `
        Bienvenue sur mon portfolio.<br>
        L'utilisation se fait comme dans un invite de commande.<br>
        Merci, KIS BALINT.<br><br>
        Veuillez effectuer la commande : help
    `;
    output.innerHTML += `<div>${welcomeMessage}</div>`;
}

// Gérer l'événement de pression de la touche Entrée
commandInput.addEventListener('keydown', function(event) {
    if (event.key === "Enter") {
        const command = commandInput.value.trim();
        executeCommand(command);
        commandInput.value = ''; // Efface le champ de saisie après chaque commande
    }
});

// Donner le focus au champ d'entrée lors d'un clic sur le terminal
terminal.addEventListener('click', function() {
    commandInput.focus();
});

// Charger les commandes et afficher le message de bienvenue au chargement de la page
window.onload = async function () {
    await loadCommands();
    displayWelcomeMessage();
};
